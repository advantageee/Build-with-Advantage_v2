@model AdvantageAIWeb.ViewModels.ImageCaptionViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Generate Image Caption - AdvantageAI";
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h2 class="mb-0">Generate Image Caption</h2>
                </div>
                <div class="card-body">
                    <form id="imageCaptionForm" enctype="multipart/form-data">
                        @Html.AntiForgeryToken()

                        <!-- Image Upload -->
                        <div class="mb-3">
                            <label for="ImageUpload" class="form-label">Upload an image:</label>
                            <div class="input-group">
                                <input type="file" id="ImageUpload" class="form-control"
                                       accept="image/*" aria-describedby="imageHelp" />
                                <button type="button" class="btn btn-outline-secondary" id="clearImageBtn">
                                    <i class="bi bi-x-lg"></i>
                                </button>
                            </div>
                            <div id="imageHelp" class="form-text">
                                Supported formats: JPG, PNG, GIF (max 10MB)
                            </div>
                        </div>

                        <!-- Image Preview -->
                        <div id="imagePreview" class="mb-3 d-none">
                            <label class="form-label">Image Preview:</label>
                            <div class="position-relative">
                                <img id="previewImg" class="img-fluid rounded" alt="Preview" />
                            </div>
                        </div>

                        <!-- Generation Options -->
                        <div class="mb-3">
                            <label class="form-label">Caption Options:</label>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="detailedMode">
                                <label class="form-check-label" for="detailedMode">
                                    Generate detailed description
                                </label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="altTextMode">
                                <label class="form-check-label" for="altTextMode">
                                    Generate alt text version
                                </label>
                            </div>
                        </div>

                        <!-- Submit Button -->
                        <div class="mb-3">
                            <button type="submit" class="btn btn-primary" id="generateBtn">
                                <span class="button-text">Generate Caption</span>
                                <span class="spinner-border spinner-border-sm ms-2 d-none" role="status"></span>
                            </button>
                            <button type="button" class="btn btn-secondary" id="clearBtn">
                                Clear All
                            </button>
                        </div>
                    </form>

                    <!-- Error Alert -->
                    <div id="errorAlert" class="alert alert-danger mt-3 d-none"></div>

                    <!-- Results Section -->
                    <div id="resultsContainer" class="mt-4 d-none">
                        <h3>Generated Captions</h3>

                        <!-- Standard Caption -->
                        <div class="mb-3">
                            <label class="form-label">Standard Caption:</label>
                            <div class="input-group">
                                <textarea id="standardCaption" class="form-control" rows="2" readonly></textarea>
                                <button class="btn btn-outline-secondary" onclick="AdvantageAI.Caption.copyToClipboard('standardCaption')">
                                    <i class="bi bi-clipboard"></i>
                                </button>
                            </div>
                        </div>

                        <!-- Detailed Description (if selected) -->
                        <div id="detailedContainer" class="mb-3 d-none">
                            <label class="form-label">Detailed Description:</label>
                            <div class="input-group">
                                <textarea id="detailedCaption" class="form-control" rows="4" readonly></textarea>
                                <button class="btn btn-outline-secondary" onclick="AdvantageAI.Caption.copyToClipboard('detailedCaption')">
                                    <i class="bi bi-clipboard"></i>
                                </button>
                            </div>
                        </div>

                        <!-- Alt Text (if selected) -->
                        <div id="altTextContainer" class="mb-3 d-none">
                            <label class="form-label">Alt Text:</label>
                            <div class="input-group">
                                <textarea id="altText" class="form-control" rows="2" readonly></textarea>
                                <button class="btn btn-outline-secondary" onclick="AdvantageAI.Caption.copyToClipboard('altText')">
                                    <i class="bi bi-clipboard"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        var AdvantageAI = AdvantageAI || {};

        AdvantageAI.Caption = {
            // Initialize
            init: function() {
                this.setupEventListeners();
            },

            // Get CSRF token
            getCsrfToken: function() {
                return $('input[name="__RequestVerificationToken"]').val();
            },

            // Setup event listeners
            setupEventListeners: function() {
                // File input change
                $('#ImageUpload').on('change', this.handleFileSelect.bind(this));

                // Clear buttons
                $('#clearImageBtn').on('click', this.clearImage.bind(this));
                $('#clearBtn').on('click', this.clearAll.bind(this));

                // Form submission
                $('#imageCaptionForm').on('submit', this.handleSubmit.bind(this));

                // Option changes
                $('#detailedMode, #altTextMode').on('change', this.updateUI.bind(this));
            },

            // Handle file selection
            handleFileSelect: function(e) {
                const file = e.target.files[0];
                if (!file) return;

                // Validate file
                if (!this.validateFile(file)) {
                    this.showError('Please upload a valid image file (JPG, PNG, GIF) under 10MB.');
                    this.clearImage();
                    return;
                }

                // Show preview
                const reader = new FileReader();
                reader.onload = (e) => {
                    $('#previewImg').attr('src', e.target.result);
                    $('#imagePreview').removeClass('d-none');
                };
                reader.readAsDataURL(file);
            },

            // Validate file
            validateFile: function(file) {
                const validTypes = ['image/jpeg', 'image/png', 'image/gif'];
                const maxSize = 10 * 1024 * 1024; // 10MB

                return validTypes.includes(file.type) && file.size <= maxSize;
            },

            // Handle form submission
            handleSubmit: async function(e) {
                e.preventDefault();

                const file = $('#ImageUpload')[0].files[0];
                if (!file) {
                    this.showError('Please select an image first.');
                    return;
                }

                this.showLoading(true);
                const formData = new FormData();
                formData.append('imageFile', file);
                formData.append('__RequestVerificationToken', this.getCsrfToken());
                formData.append('detailed', $('#detailedMode').is(':checked'));
                formData.append('altText', $('#altTextMode').is(':checked'));

                try {
                    const response = await fetch('@Url.Action("GenerateImageCaption", "Home")', {
                        method: 'POST',
                        body: formData
                    });

                    if (!response.ok) throw new Error('Failed to generate caption.');

                    const data = await response.json();
                    if (data.error) {
                        this.showError(data.error);
                    } else {
                        this.displayResults(data);
                    }
                } catch (error) {
                    console.error('Error:', error);
                    this.showError('An error occurred while generating the caption.');
                } finally {
                    this.showLoading(false);
                }
            },

            // Display results
            displayResults: function(data) {
                $('#standardCaption').val(data.caption);

                if (data.detailedDescription) {
                    $('#detailedCaption').val(data.detailedDescription);
                    $('#detailedContainer').removeClass('d-none');
                }

                if (data.altText) {
                    $('#altText').val(data.altText);
                    $('#altTextContainer').removeClass('d-none');
                }

                $('#resultsContainer').removeClass('d-none');
                $('#errorAlert').addClass('d-none');
            },

            // Copy to clipboard
            copyToClipboard: function(elementId) {
                const text = $(`#${elementId}`).val();
                navigator.clipboard.writeText(text).then(() => {
                    const $btn = $(`#${elementId}`).next('button');
                    const originalHtml = $btn.html();
                    $btn.html('<i class="bi bi-check"></i>');
                    setTimeout(() => $btn.html(originalHtml), 2000);
                }).catch(() => {
                    this.showError('Failed to copy text.');
                });
            },

            // UI helpers
            showLoading: function(show) {
                const $btn = $('#generateBtn');
                const $spinner = $btn.find('.spinner-border');
                const $text = $btn.find('.button-text');

                $btn.prop('disabled', show);
                $spinner.toggleClass('d-none', !show);
                $text.text(show ? 'Generating...' : 'Generate Caption');
            },

            showError: function(message) {
                const $error = $('#errorAlert');
                $error.text(message).removeClass('d-none');
                setTimeout(() => $error.addClass('d-none'), 5000);
            },

            clearImage: function() {
                $('#ImageUpload').val('');
                $('#imagePreview').addClass('d-none');
                $('#previewImg').attr('src', '');
            },

            clearAll: function() {
                this.clearImage();
                $('#detailedMode, #altTextMode').prop('checked', false);
                $('#resultsContainer').addClass('d-none');
                $('#errorAlert').addClass('d-none');
                $('#standardCaption, #detailedCaption, #altText').val('');
            },

            updateUI: function() {
                const detailed = $('#detailedMode').is(':checked');
                const altText = $('#altTextMode').is(':checked');

                $('#detailedContainer').toggleClass('d-none', !detailed);
                $('#altTextContainer').toggleClass('d-none', !altText);
            }
        };

        // Initialize on document ready
        $(document).ready(function() {
            AdvantageAI.Caption.init();
        });
    </script>
}